import{_ as n,c as a,a as e,o as l}from"./app-5MHjG6vP.js";const i={};function p(o,s){return l(),a("div",null,[...s[0]||(s[0]=[e(`<h1 id="koleksi-hello-world" tabindex="-1"><a class="header-anchor" href="#koleksi-hello-world"><span>Koleksi &quot;Hello World&quot;</span></a></h1><h2 id="a68" tabindex="-1"><a class="header-anchor" href="#a68"><span>A68</span></a></h2><p>Kode:</p><div class="language-a line-numbers-mode" data-highlighter="prismjs" data-ext="a"><pre><code class="language-a"><span class="line highlighted">( # Hello World # print((&quot;Hello World!&quot;,newline)))</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="arnoldc" tabindex="-1"><a class="header-anchor" href="#arnoldc"><span>ArnoldC</span></a></h2><p>Unduh: <a href="http://lhartikk.github.io/ArnoldC" target="_blank" rel="noopener noreferrer">http://lhartikk.github.io/ArnoldC</a></p><p>Compile: <code>java -jar ArnoldC.jar hello.arnoldc</code></p><p>Jalankan: <code>java hello</code></p><p>Kode:</p><div class="language-arnoldc line-numbers-mode" data-highlighter="prismjs" data-ext="arnoldc"><pre><code class="language-arnoldc"><span class="line">IT&#39;S SHOWTIME</span>
<span class="line highlighted">TALK TO THE HAND &quot;hello world&quot;</span>
<span class="line">YOU HAVE BEEN TERMINATED</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="asembler" tabindex="-1"><a class="header-anchor" href="#asembler"><span>Asembler</span></a></h2><div class="language-s line-numbers-mode" data-highlighter="prismjs" data-ext="s"><pre><code class="language-s"><span class="line">## Hello Word in Assemlber for the MIPS Architecture</span>
<span class="line"></span>
<span class="line">.globl main</span>
<span class="line"></span>
<span class="line">main:   jal hwbody              #call Hello World Procedure</span>
<span class="line">       trap 10                 #exit</span>
<span class="line"></span>
<span class="line">hwbody: addi $30, $30,-4        #we need to preserve</span>
<span class="line">       sw $4, 0($30)           #existing values in register 4</span>
<span class="line"></span>
<span class="line">       addi $4,$0,72           # H</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,101          # e</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,108          # l</span>
<span class="line">       trap 101</span>
<span class="line">       trap 101                # l</span>
<span class="line">       addi $4,$0,111          # o</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,32           # &lt;space&gt;</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,87           # W</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,111          # o</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,114          # r</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,108          # l</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,100          # d</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,33           # !</span>
<span class="line">       trap 101</span>
<span class="line">       addi $4,$0,10           # \\n</span>
<span class="line">       trap 101</span>
<span class="line"></span>
<span class="line">done:   lw $4, 0($30)           #restore values</span>
<span class="line">       addi $30, $30, 4        #in register 4</span>
<span class="line">       jr $31                  #return to the main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="asembly" tabindex="-1"><a class="header-anchor" href="#asembly"><span>Asembly</span></a></h2><p>Kode:</p><div class="language-asm line-numbers-mode" data-highlighter="prismjs" data-ext="asm"><pre><code class="language-asm"><span class="line">org 100h</span>
<span class="line"></span>
<span class="line"></span>
<span class="line">lea dx, hello_string ; Put address of string in dx</span>
<span class="line">mov ah, 9 ; Move 9h to ah register</span>
<span class="line">int 21h ; Call the 21h interupt to print to the screen  </span>
<span class="line"></span>
<span class="line">mov ax, 4C00H ; See above</span>
<span class="line">int 21h ; Call interupt</span>
<span class="line"></span>
<span class="line">ret  </span>
<span class="line"></span>
<span class="line">hello_string dw &quot;Hello World!$&quot; ; Define the string to print</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="batch" tabindex="-1"><a class="header-anchor" href="#batch"><span>Batch</span></a></h2><p>Jalankan: <code>hello_world.bat</code></p><p>Kode:</p><div class="language-bat line-numbers-mode" data-highlighter="prismjs" data-ext="bat"><pre><code class="language-bat"><span class="line">@echo off</span>
<span class="line highlighted">echo Hello World!</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="befunge" tabindex="-1"><a class="header-anchor" href="#befunge"><span>Befunge</span></a></h2><p>http://www.quirkster.com/iano/js/befunge.html</p><p>Kode:</p><div class="language-befunge line-numbers-mode" data-highlighter="prismjs" data-ext="befunge"><pre><code class="language-befunge"><span class="line highlighted">&quot;!dlroW olleH&quot; &gt; v</span>
<span class="line">                 ,</span>
<span class="line">                 :</span>
<span class="line">               ^ _ @</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="c" tabindex="-1"><a class="header-anchor" href="#c"><span>C</span></a></h2><p>Compile: <code>gcc hello_world.c -o hello_world</code></p><p>Jalankan (Linux): <code>./hello_world</code></p><p>Kode:</p><div class="language-c line-numbers-mode" data-highlighter="prismjs" data-ext="c"><pre><code class="language-c"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">	<span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="c-1" tabindex="-1"><a class="header-anchor" href="#c-1"><span>C#</span></a></h2><p>Kode:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs"><pre><code class="language-csharp"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">   <span class="token punctuation">{</span></span>
<span class="line highlighted">      System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="c-2" tabindex="-1"><a class="header-anchor" href="#c-2"><span>C++</span></a></h2><p>Compile: <code>g++ hello_world.cpp -o hello_world</code></p><p>Jalankan (Linux): <code>./hello_world</code></p><p>Kode:</p><div class="language-cpp line-numbers-mode" data-highlighter="prismjs" data-ext="cpp"><pre><code class="language-cpp"><span class="line"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token operator">*</span> argv<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">	cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Hello World!&quot;</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="coffee" tabindex="-1"><a class="header-anchor" href="#coffee"><span>Coffee</span></a></h2><p>Kode:</p><div class="language-coffee line-numbers-mode" data-highlighter="prismjs" data-ext="coffee"><pre><code class="language-coffee"><span class="line highlighted">console<span class="token punctuation">.</span>log <span class="token string">&quot;Hello World!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="dart" tabindex="-1"><a class="header-anchor" href="#dart"><span>Dart</span></a></h2><p>Jalankan: <code>dart hello_word.dart</code></p><p>Kode:</p><div class="language-dart line-numbers-mode" data-highlighter="prismjs" data-ext="dart"><pre><code class="language-dart"><span class="line"><span class="token comment">// #1) Install Dart - https://www.dartlang.org/</span></span>
<span class="line"><span class="token comment">// #2) Run - dart hello_world.dart</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Hello World!&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="elixir" tabindex="-1"><a class="header-anchor" href="#elixir"><span>Elixir</span></a></h2><p>Kode:</p><div class="language-elixir line-numbers-mode" data-highlighter="prismjs" data-ext="elixir"><pre><code class="language-elixir"><span class="line"><span class="token comment"># 1) Install Elixir - https://elixir-lang.org/</span></span>
<span class="line"><span class="token comment"># 2) Run - elixir hello_world.ex</span></span>
<span class="line"></span>
<span class="line highlighted"><span class="token module class-name">IO</span><span class="token punctuation">.</span>puts <span class="token string">&quot;Hello World&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="f" tabindex="-1"><a class="header-anchor" href="#f"><span>F</span></a></h2><p>Kode:</p><div class="language-f line-numbers-mode" data-highlighter="prismjs" data-ext="f"><pre><code class="language-f"><span class="line">       program hello</span>
<span class="line highlighted">          print *, &quot;Hello World!&quot;</span>
<span class="line">       end program hello</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="fish" tabindex="-1"><a class="header-anchor" href="#fish"><span>Fish</span></a></h2><p>Jalankan: <code>fish hello_word.fish</code></p><p>Kode:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">#! /usr/bin/fish</span>
<span class="line"></span>
<span class="line"># To install the fish shell for your target platform, please refer to https://fishshell.com/</span>
<span class="line highlighted">echo &#39;Hello World!&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="go" tabindex="-1"><a class="header-anchor" href="#go"><span>Go</span></a></h2><p>Kode:</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go"><pre><code class="language-go"><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;fmt&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="haskell" tabindex="-1"><a class="header-anchor" href="#haskell"><span>Haskell</span></a></h2><p>Compile: <code>ghc -dynamic helloworld.hs</code></p><p>Jalankan (Linux): <code>./helloworld</code></p><p>Kode:</p><div class="language-hs line-numbers-mode" data-highlighter="prismjs" data-ext="hs"><pre><code class="language-hs"><span class="line highlighted"><span class="token hvariable">main</span> <span class="token operator">=</span> <span class="token builtin">putStrLn</span> <span class="token string">&quot;Hello World!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="html" tabindex="-1"><a class="header-anchor" href="#html"><span>HTML</span></a></h2><p>Kode:</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code class="language-html"><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line highlighted">Hello World!</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h2><p>Compile: <code>javac HelloWorld.java</code></p><p>Jalankan: <code>java HelloWorld</code></p><p>Kode:</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code class="language-java"><span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloWorld</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javascript" tabindex="-1"><a class="header-anchor" href="#javascript"><span>Javascript</span></a></h2><p>Kode:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code class="language-javascript"><span class="line highlighted">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="julia" tabindex="-1"><a class="header-anchor" href="#julia"><span>Julia</span></a></h2><p>Compile and Jalankan: <code>julia HelloWorld.jl</code></p><p>Kode:</p><div class="language-julia line-numbers-mode" data-highlighter="prismjs" data-ext="julia"><pre><code class="language-julia"><span class="line highlighted"><span class="token keyword">println</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="kotlin" tabindex="-1"><a class="header-anchor" href="#kotlin"><span>Kotlin</span></a></h2><p>Compile: <code>kotlinc HelloWorld.kt -include-Jalankantime -d HelloWorld.jar</code></p><p>Jalankan: <code>java -jar HelloWorld.jar</code></p><p>Kode:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt"><pre><code class="language-kotlin"><span class="line"><span class="token keyword">fun</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line highlighted">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lolkode" tabindex="-1"><a class="header-anchor" href="#lolkode"><span>LolKode</span></a></h2><p>Jalankan: lci hello_world.lolcode</p><p>http://lolcode.org/</p><p>Kode:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code class="language-text"><span class="line">HAI 1.2</span>
<span class="line">  CAN HAS STDIO?</span>
<span class="line highlighted">  VISIBLE &quot;Hello World!&quot;</span>
<span class="line">KTHXBYE</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lisp" tabindex="-1"><a class="header-anchor" href="#lisp"><span>Lisp</span></a></h2><p>Install clisp | <code>sudo apt-get install clisp</code></p><p>Jalankan: <code>clisp hello_world.lisp</code></p><p>Kode:</p><div class="language-lsip line-numbers-mode" data-highlighter="prismjs" data-ext="lsip"><pre><code class="language-lsip"><span class="line">;;;; install clisp | sudo apt-get install clisp</span>
<span class="line">;;; run by typing: clisp hello_world.lisp</span>
<span class="line"></span>
<span class="line highlighted">(write-line &quot;Hello World&quot;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="matlab" tabindex="-1"><a class="header-anchor" href="#matlab"><span>Matlab</span></a></h2><p>Kode:</p><div class="language-matlab line-numbers-mode" data-highlighter="prismjs" data-ext="matlab"><pre><code class="language-matlab"><span class="line highlighted"><span class="token function">disp</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="nim" tabindex="-1"><a class="header-anchor" href="#nim"><span>NIM</span></a></h2><p>Kode:</p><div class="language-nim line-numbers-mode" data-highlighter="prismjs" data-ext="nim"><pre><code class="language-nim"><span class="line highlighted">echo <span class="token string">&quot;Hello World!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="ook" tabindex="-1"><a class="header-anchor" href="#ook"><span>Ook</span></a></h2><p>https://www.splitbrain.org/services/ook</p><p>Kode:</p><div class="language-ook line-numbers-mode" data-highlighter="prismjs" data-ext="ook"><pre><code class="language-ook"><span class="line">Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook.</span>
<span class="line">Ook! Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook?</span>
<span class="line">Ook! Ook! Ook? Ook! Ook? Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook! Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook.</span>
<span class="line">Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook? Ook. Ook. Ook.</span>
<span class="line">Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook. Ook? Ook! Ook! Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.</span>
<span class="line">Ook? Ook. Ook? Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook.</span>
<span class="line">Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook.</span>
<span class="line">Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook!</span>
<span class="line">Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pascal" tabindex="-1"><a class="header-anchor" href="#pascal"><span>Pascal</span></a></h2><p>Kode:</p><div class="language-pascal line-numbers-mode" data-highlighter="prismjs" data-ext="pascal"><pre><code class="language-pascal"><span class="line"><span class="token keyword">program</span> hello_world<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line highlighted">writeln<span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="perl" tabindex="-1"><a class="header-anchor" href="#perl"><span>Perl</span></a></h2><p>Jalankan: <code>perl hello_world.pl</code></p><p>Kode:</p><div class="language-pl line-numbers-mode" data-highlighter="prismjs" data-ext="pl"><pre><code class="language-pl"><span class="line">#!/usr/bin/perl</span>
<span class="line"></span>
<span class="line highlighted">print &quot;Hello World!\\n&quot;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="php" tabindex="-1"><a class="header-anchor" href="#php"><span>Php</span></a></h2><p>Jalankan <code>php hello_world.php</code></p><p>Kode:</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php"><pre><code class="language-php"><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line highlighted">	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Hello World!\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="powershell" tabindex="-1"><a class="header-anchor" href="#powershell"><span>Powershell</span></a></h2><p>Kode:</p><div class="language-ps line-numbers-mode" data-highlighter="prismjs" data-ext="ps"><pre><code class="language-ps"><span class="line highlighted">Write-Host &quot;Hello, World!&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="processing" tabindex="-1"><a class="header-anchor" href="#processing"><span>Processing</span></a></h2><p>Compile and Jalankan : processing-java --Jalankan --sketch=<code>pwd</code>/HelloWorld --output=<code>pwd</code>/HelloWorld/output</p><h2 id="python-2" tabindex="-1"><a class="header-anchor" href="#python-2"><span>Python 2</span></a></h2><p>Jalankan: <code>python2 hello_world_2.py</code></p><p>Kode:</p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line highlighted"><span class="token keyword">print</span> <span class="token string">&quot;Hello World!&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="python-3" tabindex="-1"><a class="header-anchor" href="#python-3"><span>Python 3</span></a></h2><p>Jalankan: <code>python3 hello_world_3-6.py</code></p><div class="language-python line-numbers-mode" data-highlighter="prismjs" data-ext="py"><pre><code class="language-python"><span class="line highlighted"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;Hello world&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="r" tabindex="-1"><a class="header-anchor" href="#r"><span>R</span></a></h2><p>Jalankan: <code>R Hello-World.r</code></p><p>Kode:</p><div class="language-r line-numbers-mode" data-highlighter="prismjs" data-ext="r"><pre><code class="language-r"><span class="line">hello<span class="token operator">&lt;-</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line highlighted">print<span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span>
<span class="line">hello</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rust" tabindex="-1"><a class="header-anchor" href="#rust"><span>Rust</span></a></h2><p>Compile: <code>rustc hello_world.rs</code></p><p>Jalankan: <code>./hello_world.rs</code></p><p>Kode:</p><div class="language-rust line-numbers-mode" data-highlighter="prismjs" data-ext="rs"><pre><code class="language-rust"><span class="line"><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">	<span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="scala" tabindex="-1"><a class="header-anchor" href="#scala"><span>Scala</span></a></h2><p>Kode:</p><div class="language-scala line-numbers-mode" data-highlighter="prismjs" data-ext="scala"><pre><code class="language-scala"><span class="line"><span class="token keyword">object</span> HelloWorld <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">def</span> main<span class="token punctuation">(</span>args<span class="token operator">:</span> Array<span class="token punctuation">[</span><span class="token builtin">String</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Unit</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line highlighted">    println<span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="shell-script" tabindex="-1"><a class="header-anchor" href="#shell-script"><span>Shell Script</span></a></h2><p>Kode:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code class="language-bash"><span class="line"><span class="token shebang important">#!/bin/sh</span></span>
<span class="line highlighted"><span class="token builtin class-name">echo</span> <span class="token string">&#39;Hello World!&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="swift" tabindex="-1"><a class="header-anchor" href="#swift"><span>Swift</span></a></h2><p>Kode:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift"><pre><code class="language-swift"><span class="line highlighted"><span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="visual-basic" tabindex="-1"><a class="header-anchor" href="#visual-basic"><span>Visual Basic</span></a></h2><p>Kode:</p><div class="language-vbs line-numbers-mode" data-highlighter="prismjs" data-ext="vbs"><pre><code class="language-vbs"><span class="line highlighted">WScript.Echo &quot;Hello World!&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,145)])])}const c=n(i,[["render",p]]),d=JSON.parse('{"path":"/id/","title":"Koleksi \\"Hello World\\"","lang":"id","frontmatter":{},"git":{"updatedTime":1761007028000,"contributors":[{"name":"dependabot[bot]","username":"dependabot[bot]","email":"49699333+dependabot[bot]@users.noreply.github.com","commits":2,"url":"https://github.com/dependabot[bot]"}],"changelog":[{"hash":"f16b8a9ff94214d67e6626c669a0ffd1d00c306d","time":1761007028000,"email":"49699333+dependabot[bot]@users.noreply.github.com","author":"dependabot[bot]","message":"Bump vite from 7.1.5 to 7.1.11 (#180)","coAuthors":[{"name":"dependabot[bot]","email":"49699333+dependabot[bot]@users.noreply.github.com"}]}]},"filePathRelative":"id/README.md"}');export{c as comp,d as data};
